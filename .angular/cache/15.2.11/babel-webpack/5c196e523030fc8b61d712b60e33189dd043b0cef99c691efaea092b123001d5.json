{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/AngelHita/Documents/tato/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PromotionModalComponent } from '@components/promotion-modal/promotion-modal.component';\nimport { PuzzlesModalComponent } from '@components/puzzles-modal/puzzles-modal.component';\nimport * as uuid from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@services/request.service\";\nimport * as i3 from \"@services/games.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@pipes/translate.pipe\";\nexport let PuzzlesPage = /*#__PURE__*/(() => {\n  class PuzzlesPage {\n    constructor(popoverController, requestService, modalController, gameService) {\n      this.popoverController = popoverController;\n      this.requestService = requestService;\n      this.modalController = modalController;\n      this.gameService = gameService;\n      this.puzzlesToMakeANewRequest = 10;\n      this.failed = false;\n      this.theme = 'all';\n    }\n    ngAfterViewInit() {\n      this.boardId = uuid.v4();\n      this.userRating = this.gameService.getUserRating();\n      this.setPuzzleData();\n    }\n    setPuzzleData() {\n      if (this.theme === 'all') {\n        this.requestService.getPuzzlesFromRating(this.userRating).subscribe(data => {\n          this.allPuzzles = data;\n          this.currentPuzzle = this.allPuzzles.splice(Math.floor(Math.random() * this.allPuzzles.length), 1)[0];\n          this.initPosition();\n        });\n      } else {\n        this.requestService.getPuzzlesFromTheme(this.theme).subscribe(data => {\n          this.allPuzzles = data.filter(e => e.rating < this.userRating + 500 && e.rating > this.userRating - 500);\n          this.currentPuzzle = this.allPuzzles.splice(Math.floor(Math.random() * this.allPuzzles.length), 1)[0];\n          this.initPosition();\n        });\n      }\n    }\n    initPosition() {\n      this.failed = false;\n      this.currentPuzzle.movesArray = this.currentPuzzle.moves.trim().split(' ');\n      this.currentPuzzlePointer = 0;\n      this.game = new Chess(this.currentPuzzle.fen);\n      this.userColor = this.currentPuzzle.fen.split(' ')[1] === 'w' ? 'black' : 'white';\n      this.board = Chessground(document.getElementById(this.boardId), {\n        orientation: this.userColor,\n        fen: this.currentPuzzle.fen,\n        turnColor: this.userColor,\n        movable: {\n          color: this.userColor,\n          free: false,\n          dests: this.toDests()\n        },\n        draggable: {\n          showGhost: true\n        }\n      });\n      this.board.set({\n        movable: {\n          events: {\n            after: this.makeAMove()\n          }\n        }\n      });\n      setTimeout(() => {\n        this.makeComputerMove(this.currentPuzzle.movesArray[this.currentPuzzlePointer]);\n      }, 1000);\n    }\n    makeAMove() {\n      var _this = this;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (orig, dest) {\n          let move = `${orig}${dest}`;\n          const origPiece = _this.game.get(orig);\n          if (origPiece.type === 'p' && (origPiece.color === 'w' && dest.includes('8') || origPiece.color === 'b' && dest.includes('1'))) {\n            const popover = yield _this.popoverController.create({\n              component: PromotionModalComponent,\n              componentProps: {\n                color: `modal-color-${origPiece.color}`\n              },\n              translucent: false\n            });\n            yield popover.present();\n            const promotion = yield popover.onDidDismiss();\n            yield popover.present();\n            move = move.concat(promotion.data);\n          }\n          if (move === _this.currentPuzzle.movesArray[_this.currentPuzzlePointer]) {\n            _this.game.move(move, {\n              sloppy: true\n            });\n            _this.currentPuzzlePointer++;\n            if (_this.currentPuzzle.movesArray.length === _this.currentPuzzlePointer) {\n              _this.puzzleSolved();\n            } else {\n              _this.makeComputerMove(_this.currentPuzzle.movesArray[_this.currentPuzzlePointer]);\n            }\n          } else {\n            // Wrong move\n            _this.failed = true;\n            setTimeout(() => {\n              _this.board.set({\n                turnColor: _this.userColor,\n                fen: _this.game.fen(),\n                lastMove: _this.getLastMove(1),\n                movable: {\n                  color: _this.userColor,\n                  dests: _this.toDests()\n                }\n              });\n            }, 200);\n          }\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n    getLastMove(index) {\n      const lastMove = this.currentPuzzle.movesArray[this.currentPuzzlePointer - index];\n      const res = [];\n      res.push(lastMove.substring(0, 2));\n      res.push(lastMove.substring(2));\n      return res;\n    }\n    makeComputerMove(move) {\n      this.game.move(move, {\n        sloppy: true\n      });\n      this.board.set({\n        fen: this.game.fen(),\n        lastMove: this.getLastMove(0),\n        turnColor: this.userColor,\n        movable: {\n          color: this.userColor,\n          dests: this.toDests()\n        }\n      });\n      this.currentPuzzlePointer++;\n    }\n    toDests() {\n      const dests = new Map();\n      this.game.SQUARES.forEach(s => {\n        const ms = this.game.moves({\n          square: s,\n          verbose: true\n        });\n        if (ms.length) {\n          dests.set(s, ms.map(m => m.to));\n        }\n      });\n      return dests;\n    }\n    puzzleSolved() {\n      this.userRating = this.getNewRating(this.userRating, this.currentPuzzle.rating, this.failed ? 0 : 1);\n      this.gameService.setUserRating(this.userRating);\n      this.currentPuzzle = this.allPuzzles.splice(Math.floor(Math.random() * this.allPuzzles.length), 1)[0];\n      setTimeout(() => {\n        this.initPosition();\n      }, 1000);\n    }\n    nextPuzzle() {\n      if (this.failed) {\n        this.userRating = this.getNewRating(this.userRating, this.currentPuzzle.rating, this.failed ? 0 : 1);\n        this.gameService.setUserRating(this.userRating);\n      }\n      this.currentPuzzle = this.allPuzzles.splice(Math.floor(Math.random() * this.allPuzzles.length), 1)[0];\n      this.initPosition();\n    }\n    getNewRating(myRating, opponentRating, myGameResult) {\n      if ([0, 0.5, 1].indexOf(myGameResult) === -1) {\n        return null;\n      }\n      const myChanceToWin = 1 / (1 + Math.pow(10, (opponentRating - myRating) / 400));\n      return myRating + Math.round(32 * (myGameResult - myChanceToWin));\n    }\n    showSolution() {\n      this.failed = true;\n      const match = this.currentPuzzle.movesArray[this.currentPuzzlePointer].match(/^([a-h][1-8])([a-h][1-8])/);\n      this.board.set({\n        drawable: {\n          shapes: []\n        }\n      });\n      this.board.set({\n        drawable: {\n          shapes: [{\n            orig: match[1],\n            dest: match[2],\n            brush: 'blue'\n          }]\n        }\n      });\n    }\n    openSettings() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this2.modalController.create({\n          component: PuzzlesModalComponent,\n          componentProps: {\n            theme: _this2.theme\n          }\n        });\n        yield modal.present();\n        yield modal.onDidDismiss().then(data => {\n          if (data.data) {\n            _this2.theme = data.data.theme;\n            _this2.setPuzzleData();\n          }\n        });\n      })();\n    }\n    static #_ = this.ɵfac = function PuzzlesPage_Factory(t) {\n      return new (t || PuzzlesPage)(i0.ɵɵdirectiveInject(i1.PopoverController), i0.ɵɵdirectiveInject(i2.RequestService), i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i3.GamesService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PuzzlesPage,\n      selectors: [[\"app-puzzles\"]],\n      decls: 34,\n      vars: 35,\n      consts: [[3, \"fullscreen\"], [1, \"title-bar\"], [1, \"title-bar-text\"], [1, \"title-bar-controls\"], [\"aria-label\", \"Minimize\"], [\"aria-label\", \"Maximize\"], [\"aria-label\", \"Close\"], [1, \"panel-container\"], [1, \"board-container\"], [3, \"id\"], [1, \"panel-element\"], [1, \"level-bar\"], [3, \"ngClass\"], [\"color\", \"medium\", 1, \"windows-button\", \"button-control-element\", 3, \"click\"]],\n      template: function PuzzlesPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 3);\n          i0.ɵɵelement(7, \"button\", 4)(8, \"button\", 5)(9, \"button\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8);\n          i0.ɵɵelement(12, \"div\", 9);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 10)(14, \"div\", 11);\n          i0.ɵɵtext(15);\n          i0.ɵɵpipe(16, \"async\");\n          i0.ɵɵpipe(17, \"translate\");\n          i0.ɵɵelement(18, \"div\", 12);\n          i0.ɵɵtext(19);\n          i0.ɵɵpipe(20, \"async\");\n          i0.ɵɵpipe(21, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function PuzzlesPage_Template_button_click_22_listener() {\n            return ctx.showSolution();\n          });\n          i0.ɵɵtext(23);\n          i0.ɵɵpipe(24, \"async\");\n          i0.ɵɵpipe(25, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function PuzzlesPage_Template_button_click_26_listener() {\n            return ctx.nextPuzzle();\n          });\n          i0.ɵɵtext(27);\n          i0.ɵɵpipe(28, \"async\");\n          i0.ɵɵpipe(29, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function PuzzlesPage_Template_button_click_30_listener() {\n            return ctx.openSettings();\n          });\n          i0.ɵɵtext(31);\n          i0.ɵɵpipe(32, \"async\");\n          i0.ɵɵpipe(33, \"translate\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 11, i0.ɵɵpipeBind1(5, 13, \"puzzles\")));\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"id\", ctx.boardId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(16, 15, i0.ɵɵpipeBind1(17, 17, \"turn\")), \": \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", ctx.userColor);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate3(\" Elo: \", ctx.userRating, \" | \", i0.ɵɵpipeBind1(20, 19, i0.ɵɵpipeBind1(21, 21, \"theme\")), \": \", ctx.theme, \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 23, i0.ɵɵpipeBind1(25, 25, \"solution\")), \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(28, 27, i0.ɵɵpipeBind1(29, 29, \"next\")), \" \");\n          i0.ɵɵadvance(4);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(32, 31, i0.ɵɵpipeBind1(33, 33, \"settings\")), \" \");\n        }\n      },\n      dependencies: [i4.NgClass, i1.IonContent, i4.AsyncPipe, i5.TranslatePipe],\n      styles: [\".title-bar[_ngcontent-%COMP%]{background:linear-gradient(90deg,#000080,#1084d0);padding:3px 6px;display:flex;justify-content:space-between;align-items:center;margin:0 13px;position:relative;top:5px}.title-bar[_ngcontent-%COMP%]   .title-bar-text[_ngcontent-%COMP%]{color:#fff;font-weight:700;font-size:12px;margin-right:24px}.title-bar[_ngcontent-%COMP%]   .title-bar-controls[_ngcontent-%COMP%]{display:flex}.title-bar[_ngcontent-%COMP%]   .title-bar-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:16px;height:14px;border:none;background-color:silver;margin-left:2px;position:relative;box-shadow:inset -1px -1px #0a0a0a,inset 1px 1px #fff,inset -2px -2px gray,inset 2px 2px #dfdfdf}.panel-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;background-color:silver;border:2px solid #dfdfdf;border-bottom-color:#404040;border-right-color:#404040;box-shadow:inset 1px 1px #dfdfdf,1px 0 #000,0 1px #000,1px 1px #000;margin:-24px 10px 10px;padding:36px 10px 10px}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]{flex-direction:column}}.panel-container[_ngcontent-%COMP%]   .board-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:65vmin;height:65vmin;margin:10px}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]   .board-container[_ngcontent-%COMP%]{width:calc(100vmin - 52px);height:calc(100vmin - 52px);margin:0 0 30px}}.panel-container[_ngcontent-%COMP%]   .board-container-element[_ngcontent-%COMP%]{width:55vmin;height:55vmin}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]{width:calc(100vw - 68vmin - 75px);margin:20px auto;overflow-y:auto;max-height:calc(100vh - 135px)}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]{width:100%;padding:15px 10px 0;max-height:calc(100vh - 100vmin - 182px);overflow-y:auto}}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]   .level-bar[_ngcontent-%COMP%]{display:flex;flex-direction:row;align-items:center;justify-content:center}@media (min-width: 660px){.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]   .level-bar[_ngcontent-%COMP%]{padding-top:15px}}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]   .level-bar[_ngcontent-%COMP%]   div.white[_ngcontent-%COMP%]{position:relative;top:-20px;margin:0 8px;height:40px;width:40px;background-size:contain;background-image:url(assets/images/pieces/merida/wK.svg),url(/assets/images/pieces/merida/wK.svg)}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]   .level-bar[_ngcontent-%COMP%]   div.black[_ngcontent-%COMP%]{position:relative;top:-20px;margin:0 8px;height:40px;width:40px;background-size:contain;background-image:url(assets/images/pieces/merida/bK.svg),url(/assets/images/pieces/merida/bK.svg)}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]   .button-control-element[_ngcontent-%COMP%]{margin:4px;width:30%}\"]\n    });\n  }\n  return PuzzlesPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}