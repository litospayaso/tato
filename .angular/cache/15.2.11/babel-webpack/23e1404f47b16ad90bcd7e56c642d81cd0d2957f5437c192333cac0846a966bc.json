{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/AngelHita/Documents/tato/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TrainingModalComponent } from '@components/training-modal/training-modal.component';\nimport { ResultModalComponent } from '@components/result-modal/result-modal.component';\nimport { Stockfish } from '@classes/stockfish';\nimport { PromotionModalComponent } from '@components/promotion-modal/promotion-modal.component';\nimport * as uuid from 'uuid';\nimport openingsJSON from '@resources/openings.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@services/games.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@ionic/storage\";\nimport * as i5 from \"@components/moves-table/moves-table.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@pipes/translate.pipe\";\nexport let TrainingPage = /*#__PURE__*/(() => {\n  class TrainingPage {\n    constructor(route, gamesService, modalController, popoverController, storage) {\n      this.route = route;\n      this.gamesService = gamesService;\n      this.modalController = modalController;\n      this.popoverController = popoverController;\n      this.storage = storage;\n      this.algebraicMoves = [];\n      this.stockfish = new Stockfish(20, 6, 3);\n      this.userColor = 'w';\n      this.turn = 'w';\n      this.boardMovesPointer = undefined;\n      this.openingsBook = openingsJSON;\n      this.openingName = 'Scandinavian Defense';\n      this.boardId = uuid.v4();\n      this.game = new Chess();\n      this.stockfish.emmiter = this.stockfishEmmiter.bind(this);\n    }\n    ngAfterViewInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const defaultOpeningValues = _this.gamesService.getDefaultOpeningValues();\n        if (defaultOpeningValues) {\n          _this.openingName = defaultOpeningValues.opening;\n          _this.userColor = defaultOpeningValues.userColor;\n        }\n        const modal = yield _this.modalController.create({\n          component: TrainingModalComponent,\n          componentProps: {\n            defaultOpeningValues: {\n              opening: _this.openingName,\n              userColor: _this.userColor\n            }\n          }\n        });\n        yield modal.present();\n        yield modal.onDidDismiss().then(data => {\n          if (data.data) {\n            _this.gamesService.setDefaultOpeningValues(data.data);\n          }\n          _this.userColor = data.data ? data.data.userColor : 'w';\n          _this.openingsBook = openingsJSON.filter(e => e.name.includes(data.data ? data.data.opening : 'Scandinavian Defense'));\n          _this.createNewGame();\n        });\n      })();\n    }\n    createNewGame() {\n      this.moves = '';\n      this.algebraicMoves = [];\n      this.game = new Chess();\n      this.board = Chessground(document.getElementById(this.boardId), {\n        orientation: this.userColor === 'w' ? 'white' : 'black',\n        movable: {\n          color: this.userColor === 'w' ? 'white' : 'black',\n          free: false,\n          dests: this.toDests()\n        },\n        draggable: {\n          showGhost: true\n        }\n      });\n      this.board.set({\n        movable: {\n          events: {\n            after: this.makeAMove()\n          }\n        }\n      });\n      if (this.userColor === 'b') {\n        this.stockfishEmmiter('bestmove');\n      }\n    }\n    toDests() {\n      const dests = new Map();\n      this.game.SQUARES.forEach(s => {\n        const ms = this.game.moves({\n          square: s,\n          verbose: true\n        });\n        if (ms.length) {\n          dests.set(s, ms.map(m => m.to));\n        }\n      });\n      return dests;\n    }\n    makeAMove() {\n      var _this2 = this;\n      return /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (orig, dest) {\n          let move = `${orig}${dest}`;\n          const origPiece = _this2.game.get(orig);\n          if (origPiece.type === 'p' && (origPiece.color === 'w' && dest.includes('8') || origPiece.color === 'b' && dest.includes('1'))) {\n            const popover = yield _this2.popoverController.create({\n              component: PromotionModalComponent,\n              componentProps: {\n                color: `modal-color-${origPiece.color}`\n              },\n              translucent: false\n            });\n            yield popover.present();\n            const promotion = yield popover.onDidDismiss();\n            yield popover.present();\n            move = move.concat(promotion.data);\n          }\n          // tslint:disable-next-line:max-line-length\n          const moves = _this2.boardMovesPointer ? _this2.getCurrentListMoves().slice(0, _this2.boardMovesPointer).join(' ').concat(` ${move}`) : _this2.moves.concat(` ${move}`);\n          _this2.boardMovesPointer = undefined;\n          _this2.game.move(move, {\n            sloppy: true\n          });\n          _this2.moves = _this2.game.history({\n            verbose: true\n          }).map(e => `${e.from}${e.to}${e.promotion ? e.promotion : ''}`).join(' ');\n          _this2.turn = _this2.game.turn();\n          _this2.stockfish.evalPosition(moves);\n          _this2.algebraicMoves = _this2.game.history();\n          _this2.board.set({\n            fen: _this2.game.fen(),\n            turnColor: _this2.toColor(),\n            check: _this2.game.in_check() ? _this2.userColor === 'w' ? 'black' : 'white' : false,\n            movable: {\n              color: _this2.toColor(),\n              dests: _this2.toDests()\n            }\n          });\n          if (_this2.game.in_checkmate() || _this2.game.in_draw() || _this2.game.in_stalemate() || _this2.game.in_threefold_repetition()) {\n            setTimeout(() => {\n              _this2.endGame();\n            }, 1500);\n          }\n        });\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n    onResign() {\n      this.endGame(this.userColor === 'w' ? '0-1' : '1-0');\n    }\n    endGame(result) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const gameResult = result ? result : _this3.game.in_checkmate() ? _this3.game.turn() === 'w' ? '0-1' : '1-0' : '1/2 - 1/2';\n        if (_this3.moves.split(' ').length > 3) {\n          _this3.gamesService.addGame({\n            id: uuid.v4(),\n            date: new Date().toLocaleString(),\n            pgn: _this3.game.pgn(),\n            opening: _this3.opening?.name,\n            movesVerbose: _this3.moves,\n            userColor: _this3.userColor,\n            endingPosition: _this3.game.fen(),\n            gameResult\n          });\n        }\n        const modal = yield _this3.modalController.create({\n          component: ResultModalComponent,\n          componentProps: {\n            result: gameResult,\n            userColor: _this3.userColor\n          }\n        });\n        yield modal.present();\n        yield modal.onDidDismiss().then(({\n          data\n        }) => {\n          if (data) {\n            if (data.data === 'newGame') {\n              _this3.ngAfterViewInit();\n            }\n            if (data.data === 'retry') {\n              _this3.createNewGame();\n            }\n          }\n        });\n      })();\n    }\n    makeMove(move) {\n      this.game.move(move, {\n        sloppy: true\n      });\n      this.moves = this.game.history({\n        verbose: true\n      }).map(e => `${e.from}${e.to}${e.promotion ? e.promotion : ''}`).join(' ');\n      this.turn = this.game.turn();\n      this.algebraicMoves = this.game.history();\n      this.board.set({\n        fen: this.game.fen(),\n        check: this.game.in_check() ? this.userColor === 'w' ? 'white' : 'black' : false,\n        turnColor: this.toColor(),\n        movable: {\n          color: this.toColor(),\n          dests: this.toDests()\n        }\n      });\n      if (this.game.in_checkmate() || this.game.in_draw() || this.game.in_stalemate() || this.game.in_threefold_repetition()) {\n        setTimeout(() => {\n          this.endGame();\n        }, 1500);\n      }\n    }\n    toColor() {\n      return this.game.turn() === 'w' ? 'white' : 'black';\n    }\n    stockfishEmmiter(event) {\n      if (event === 'bestmove') {\n        if (this.stockfish.bestmove || this.moves === '') {\n          if (this.game.turn() !== this.userColor) {\n            // this.makeMove(this.stockfish.bestmove);\n            const openings = this.openingsBook.filter(e => e.movesVerbose.join(' ').trim().startsWith(this.moves.trim()));\n            if (openings.length > 0) {\n              this.opening = openings[Math.floor(Math.random() * openings.length)];\n              const index = this.moves === '' ? 0 : this.moves.split(' ').length;\n              if (this.opening.movesVerbose[index]) {\n                this.makeMove(this.opening.movesVerbose[index]);\n              } else {\n                this.makeStockfishMovement();\n              }\n            } else {\n              this.makeStockfishMovement();\n            }\n          }\n        }\n      }\n    }\n    makeStockfishMovement() {\n      setTimeout(() => {\n        this.makeMove(Math.random() < 0.9 ? this.stockfish.lines[0].moves[0] : this.stockfish.lines[1].moves[0]);\n      }, 300);\n    }\n    getCurrentListMoves() {\n      return this.moves.trim().split(' ').filter(e => e !== '');\n    }\n    static #_ = this.ɵfac = function TrainingPage_Factory(t) {\n      return new (t || TrainingPage)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.GamesService), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i3.PopoverController), i0.ɵɵdirectiveInject(i4.Storage));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TrainingPage,\n      selectors: [[\"app-training\"]],\n      decls: 20,\n      vars: 15,\n      consts: [[2, \"max-height\", \"calc(100vh - 58px)\", 3, \"fullscreen\"], [1, \"title-bar\"], [1, \"title-bar-text\"], [1, \"title-bar-controls\"], [\"aria-label\", \"Minimize\"], [\"aria-label\", \"Maximize\"], [\"aria-label\", \"Close\"], [1, \"panel-container\"], [1, \"board-container\"], [1, \"board-container-element\"], [3, \"id\"], [1, \"control-buttons-container\"], [\"color\", \"medium\", 1, \"windows-button\", \"button-control-element\", 3, \"click\"], [1, \"panel-element\", 3, \"moves\", \"game\", \"savedGame\"]],\n      template: function TrainingPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"div\", 2);\n          i0.ɵɵtext(3);\n          i0.ɵɵpipe(4, \"async\");\n          i0.ɵɵpipe(5, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 3);\n          i0.ɵɵelement(7, \"button\", 4)(8, \"button\", 5)(9, \"button\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 7)(11, \"div\", 8)(12, \"div\", 9);\n          i0.ɵɵelement(13, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function TrainingPage_Template_button_click_15_listener() {\n            return ctx.onResign();\n          });\n          i0.ɵɵtext(16);\n          i0.ɵɵpipe(17, \"async\");\n          i0.ɵɵpipe(18, \"translate\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelement(19, \"app-moves-table\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 7, i0.ɵɵpipeBind1(5, 9, \"training\")));\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"id\", ctx.boardId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(17, 11, i0.ɵɵpipeBind1(18, 13, \"resign\")), \" \");\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"moves\", ctx.algebraicMoves)(\"game\", ctx.game)(\"savedGame\", ctx.savedGame);\n        }\n      },\n      dependencies: [i3.IonContent, i5.MovesTableComponent, i6.AsyncPipe, i7.TranslatePipe],\n      styles: [\"#container[_ngcontent-%COMP%]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%)}#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{font-size:20px;line-height:26px}#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.title-bar[_ngcontent-%COMP%]{background:linear-gradient(90deg,#000080,#1084d0);padding:3px 6px;display:flex;justify-content:space-between;align-items:center;margin:0 13px;position:relative;top:5px}.title-bar[_ngcontent-%COMP%]   .title-bar-text[_ngcontent-%COMP%]{color:#fff;font-weight:700;font-size:12px;margin-right:24px}.title-bar[_ngcontent-%COMP%]   .title-bar-controls[_ngcontent-%COMP%]{display:flex}.title-bar[_ngcontent-%COMP%]   .title-bar-controls[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:16px;height:14px;border:none;background-color:silver;margin-left:2px;position:relative;box-shadow:inset -1px -1px #0a0a0a,inset 1px 1px #fff,inset -2px -2px gray,inset 2px 2px #dfdfdf}.panel-container[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;background-color:silver;border:2px solid #dfdfdf;border-bottom-color:#404040;border-right-color:#404040;box-shadow:inset 1px 1px #dfdfdf,1px 0 #000,0 1px #000,1px 1px #000;margin:-24px 10px 10px;padding:36px 10px 10px}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]{flex-direction:column}}.panel-container[_ngcontent-%COMP%]   .board-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;margin:10px}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]   .board-container[_ngcontent-%COMP%]{width:100vmin;height:100vmin;margin:0 0 85px}}.panel-container[_ngcontent-%COMP%]   .board-container-element[_ngcontent-%COMP%]{width:55vmin;height:55vmin}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]   .board-container-element[_ngcontent-%COMP%]{width:calc(100vmin - 52px);height:calc(100vmin - 52px);margin:0 0 30px}}.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]{width:calc(100vw - 55vmin - 140px);margin:20px 0 0 20px;overflow-y:auto;max-height:calc(100vh - 135px)}@media (max-width: 660px){.panel-container[_ngcontent-%COMP%]   .panel-element[_ngcontent-%COMP%]{width:100%;padding:0 10px;max-height:calc(100vh - 100vmin - 205px);overflow-y:auto;margin:unset}}.evaluation-bar[_ngcontent-%COMP%]{height:30px;width:calc(100% - 5px);margin-bottom:8px;background-color:#5d5d5d}.evaluation-bar[_ngcontent-%COMP%]   .evaluation-value[_ngcontent-%COMP%]{height:30px;background-color:#f4f5f8;transition:width .5s ease-in-out}.board.check-w[_ngcontent-%COMP%]   img[data-piece=wK][_ngcontent-%COMP%], .board.check-b[_ngcontent-%COMP%]   img[data-piece=bK][_ngcontent-%COMP%]{box-shadow:inset 0 0 10px red}.board[_ngcontent-%COMP%]   .start-move[_ngcontent-%COMP%]{background-color:#f2cd67}.board[_ngcontent-%COMP%]   .end-move[_ngcontent-%COMP%]{cursor:pointer}.board[_ngcontent-%COMP%]   .end-move[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{border:solid 3px #786d5a;border-radius:50%}.board[_ngcontent-%COMP%]   .end-move[_ngcontent-%COMP%]:after{content:\\\"\\\";display:inline;height:25%;width:25%;position:relative;top:38%;left:38%;opacity:.5;border-radius:50%;background-color:#000!important;display:block}.control-buttons-container[_ngcontent-%COMP%]{margin-top:20px;display:flex;flex-direction:row}.control-buttons-container[_ngcontent-%COMP%]   .button-control-element[_ngcontent-%COMP%]{width:100%}@media (max-width: 660px){.control-buttons-container[_ngcontent-%COMP%]{width:calc(100vmin - 50px)}}\"]\n    });\n  }\n  return TrainingPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}