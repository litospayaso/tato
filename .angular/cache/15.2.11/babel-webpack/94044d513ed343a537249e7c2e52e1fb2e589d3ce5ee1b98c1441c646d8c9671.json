{"ast":null,"code":"export class Stockfish {\n  constructor(level = 5, depth = 1, multiline = 1, selfdepth) {\n    this.evaluation = 0;\n    this.lines = [];\n    this.selfdepth = undefined;\n    this.level = level;\n    this.multiline = multiline;\n    this.depth = depth;\n    this.stockfish = new STOCKFISH();\n    this.stockfish.onmessage = this.onMessage.bind(this);\n    this.initStockfish();\n  }\n  onMessage(event) {\n    if (event && event.includes) {\n      if (event.includes('Total evaluation:')) {\n        this.evaluation = Number(event.match(/(-?[0-9]+.[0-9]+)/g)[0]);\n        this.emmiter('evaluation');\n      }\n      if (event.includes('bestmove ') && !event.includes('none')) {\n        const match = event.match(/^bestmove ([a-h][1-8])([a-h][1-8])([qrbk])?/);\n        this.bestmove = `${match[1]}${match[2]}${match[3] ? match[3] : ''}`;\n        this.emmiter('bestmove');\n      }\n      if (event.includes('info ') && event.includes('multipv')) {\n        const lines = event.match(/pv (([a-h][1-8][a-h][1-8][qrbk]? )+)/);\n        const thread = event.match(/multipv ([1-9])/);\n        const evaluation = event.match(/score (cp|mate) (-?[0-9]+)/);\n        if (lines && thread && evaluation) {\n          this.lines[Number(thread[1]) - 1] = {\n            thread: Number(thread[1]),\n            evaluation: evaluation[1] === 'mate' ? Number(evaluation[2]) : Number(evaluation[2]) / 100,\n            mate: evaluation[1] === 'mate',\n            moves: lines[1].split(' ').filter(e => e !== '')\n          };\n          this.lines = JSON.parse(JSON.stringify(this.lines));\n        }\n        // this.lines = this.lines.sort((a, b) => a.evaluation - b.evaluation);\n        this.emmiter('multipv');\n      }\n    }\n  }\n  initStockfish() {\n    this.stockfish.postMessage('uci');\n    // this.stockfish.postMessage('setoption name Skill Level value 20');\n    this.stockfish.postMessage(`setoption name Skill Level value ${this.level}`);\n    this.stockfish.postMessage('setoption name Contempt Factor value 0');\n    this.stockfish.postMessage('setoption name Skill Level value 0');\n    this.stockfish.postMessage('setoption name Skill Level Maximum Error value 10');\n    this.stockfish.postMessage('setoption name Skill Level Probability value 1');\n    // this.stockfish.postMessage('setoption name King Safety value 0');\n    this.stockfish.postMessage('setoption name Skill Level value 0');\n    this.stockfish.postMessage('setoption name Skill Level Maximum Error value 10');\n    this.stockfish.postMessage('setoption name Skill Level Probability value 1');\n    if (this.multiline > 0) {\n      this.stockfish.postMessage(`setoption name MultiPV value ${this.multiline}`);\n    }\n    this.stockfish.postMessage('ucinewgame');\n    this.stockfish.postMessage('isready');\n  }\n  evalPosition(moves) {\n    this.position = moves;\n    this.stockfish.postMessage(`position startpos moves ${moves}`);\n    this.stockfish.postMessage('eval');\n    this.stockfish.postMessage(`go depth ${this.depth} ${this.selfdepth ? 'seldepth ' + this.selfdepth + ' ' : ''}wtime 300000 winc 2000 btime 300000 binc 2000`);\n    this.stockfish.postMessage('eval');\n  }\n  evalFen(fen) {\n    this.stockfish.postMessage(`position fen ${fen}`);\n    this.stockfish.postMessage('eval');\n    this.stockfish.postMessage(`go depth ${this.depth} ${this.selfdepth ? 'seldepth ' + this.selfdepth + ' ' : ''}wtime 300000 winc 2000 btime 300000 binc 2000`);\n    this.stockfish.postMessage('eval');\n  }\n  emmiter(event) {}\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}